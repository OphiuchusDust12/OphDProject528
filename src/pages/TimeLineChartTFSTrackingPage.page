<!--
 - Created by arnab.karsarkar on 11/18/2016.
 -->
<apex:page id="TimeLineChartTFSTrackingPage" controller="GanttChartTFSProjectController" standardStylesheets="false" sideBar="false">

    <apex:includeScript value="{!$Resource.GoogleGanttChart}"/>
    <apex:includeScript value="{!URLFOR($Resource.inContactResource, '/inContactResource/js/jquery-3.1.1.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.inContactResource, '/inContactResource/js/bootstrap.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.inContactResource, '/inContactResource/css/bootstrap.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.inContactResource, '/inContactResource/css/bootstrap-theme.min.css')}"/>

    <script>

   //Comments to be updated
    var chart;
    var program = '';
    var data;

    jQuery(document).ready(function(){
         initChart('', []);
         InitUI();
    });


    function onChangeProj(obj)
    {

        program = obj.value == 'All' ? '' : obj.value;
        initChart(program, []);
        console.log('program ==>' + program);
    }

    function onChangeTeam(thisObj)
    {
        var teams = [];

        jQuery(thisObj).closest('tr').children('td').each(function(){
              var childObj = jQuery(this).children('input');
              if(jQuery(childObj).is(':checked')){
                  teams.push(jQuery(childObj).val());
              }

           }) ;

         initChart(program,  teams);
    }

    function daysToMilliseconds(days) {
      return days * 24 * 60 * 60 * 1000;
    }

    function initChart(projName, team){
      google.charts.load('current', {'packages':['timeline']});
      google.charts.setOnLoadCallback(function()
      {
        drawChart(projName, team);
      });
    }

    function InitUI(){
        //set backbround colors

    }




    function handleProjectClick(myvis){
      var selection = chart.getSelection();
      var message = '';
      if (selection) {
        var value = data.getValue(selection[0].row, 1);
        var numb = value.match(/\d/g);
        numb = numb.join("");
        GanttChartTFSProjectController.RedirectToProject(numb, function(result, event){
            if(event.status){
                window.location.href = result;
            }
            },{escape:true});
        } ;
      }

      function drawChart(projName, team ) {

       GanttChartTFSProjectController.getChartData(
          projName,
          team,
          function(result, event){
             if(event.status){
                    data = new google.visualization.DataTable();
                    data.addColumn({ type: 'string', id: 'Project ID' });
                    data.addColumn({ type: 'string', id: 'Project Name' });
                    data.addColumn({ type: 'date', id: 'Start' });
                    data.addColumn({ type: 'date', id: 'End' });
                    data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});

                var numOfRows;
                var timelineColor = [];


                 for (var i = 0; i < result.lstChartData.length; i++) {

                     var r = result.lstChartData[i];
                     console.log('result =' + JSON.stringify(r));
                     if(i == 1)
                     {
                         //data.addRow([r.Dependency, r.ProjectName, new Date(r.StartDateYear, r.StartDateMonth, r.StartDateDay),new Date(r.EndDateYear, r.EndDateMonth, r.EndDateDay)]);
                         data.addRow([r.Dependency, r.ProjectName, new Date(r.StartDate),new Date(r.EndDate), buildPopUp(r)]);
                     }
                     else if(i == 4)
                     {
                          //data.addRow([r.Dependency, r.ProjectName, new Date(r.StartDateYear, r.StartDateMonth, r.StartDateDay),new Date(r.EndDateYear, r.EndDateMonth, r.EndDateDay)]);
                          data.addRow([r.Dependency, r.ProjectName, new Date(r.StartDate),new Date(r.EndDate),buildPopUp(r)]);
                     }
                      else if(i == 6)
                     {
                          //data.addRow([r.Dependency, r.ProjectName, new Date(r.StartDateYear, r.StartDateMonth, r.StartDateDay),new Date(r.EndDateYear, r.EndDateMonth, r.EndDateDay)]);
                          data.addRow([r.Dependency, r.ProjectName, new Date(r.StartDate),new Date(r.EndDate),buildPopUp(r)]);
                     }
                     else
                     //data.addRow([r.Dependency, r.ProjectName, new Date(r.StartDateYear, r.StartDateMonth, r.StartDateDay),new Date(r.EndDateYear, r.EndDateMonth, r.EndDateDay)]);
                     data.addRow([r.Dependency, r.ProjectName, new Date(r.StartDate),new Date(r.EndDate), buildPopUp(r)]);
                     if(r.Type == 'Avengers')
                     {
                         timelineColor.push('#E68000');
                     }
                     else if(r.Type == 'Justice League')
                     {
                          timelineColor.push('#f4c242');
                     }
                     else  if(r.Type == 'X-Men')
                        {
                             timelineColor.push('#4289f4');
                        }

                     numOfRows = i;
                 }

                 for (var i = 0; i < result.lstSprintData.length; i++) {
                     var r = result.lstSprintData[i];
                     data.addRow(['Iterations', r.Name , new Date(r.Start_Date__c),new Date(r.End_Date__c),"Sprint"]);
                     console.log("start date :" + r.Start_Date__c);
                     timelineColor.push('#848587');
                 }


                 numOfRows += 3;

                var options = {
                    height: 100*numOfRows,
                    avoidOverlappingGridLines: false,
                    colors : timelineColor,
                    width:1100
                  };
                chart = new google.visualization.Timeline(document.getElementById('chart_div'));
                google.visualization.events.addListener(chart, 'select', handleProjectClick);
                chart.clearChart();
                chart.draw(data, options);

                function myHandler(e){
                if(e.row != null){
                    $(".google-visualization-tooltip").html(data.getValue(e.row,4)).css({width:"auto",height:"auto"});
                }
            }
            google.visualization.events.addListener(chart, 'onmouseover', myHandler);
           }

          },{escape:true});
    }
    function changeColor(elem){
        var pElem = elem.parentElement;
        if(elem.checked){
            pElem.style.backgroundColor = "red";
        }else{
            pElem.style.backgroundColor = "";
        }
    }

    function buildPopUp(r){

        var buffer;
        buffer = "<label>Project #</label></br>";
        buffer += "<label> Project Title: " +  r.ProjectName + "</label></br>";
        buffer += "<label> Project Status: In Queue" + "</label></br>";
        buffer += "<label> Project Channel: " +  r.Dependency + "</label></br>";
        buffer += "<label> Project Execution Team: " +  r.Type + "</label></br>";
        buffer += "<label> T Shirt Size: Medium" + "</label></br>";
        buffer += "<label> Project Manager: Tyson Whetton </label></br>";
        buffer += "<label> Business Analyst: John Doucette" + "</label></br>";
        return buffer;
     }
    </script>

    <apex:form >
        <style>
            body {
            font-family: Roboto;
            }
            input[value="Avengers"] + label
            {
                background-color:#E68000;
            }
            input[value="Justice League"] + label
            {
                background-color:#f4c242;
            }
            input[value="X-Men"] + label
            {
                background-color:#4289f4;
            }
             input[value="Operations"] + label
            {
                background-color:#a20077;
            }
            .selectedFilter label {color:white;}

        </style>

        <div style="padding-bottom:5px;">

            <apex:outputPanel id="programPanel">
                <apex:outputPanel layout="block">Select a Program to filter &nbsp;
                    <apex:selectList value="{!selectedProgram}" size="1" onChange="onChangeProj(this);">
                        <apex:selectOptions value="{!programs}" />
                    </apex:selectList>

                    <br/><br/>

                    <apex:outputText value="Filter Teams"></apex:outputText>
                    <apex:selectCheckboxes title="Teams"  styleClass="selectedFilter"  layout="pageDirection" style="float=left;" value="{!selectedTeams}" onChange="onChangeTeam(this);" >
                            <apex:selectOptions value="{!TeamLists}" />
                     </apex:selectCheckboxes>

                </apex:outputPanel>

            </apex:outputPanel>
        </div>

        <div id="chart_div"></div>
    </apex:form>
</apex:page>