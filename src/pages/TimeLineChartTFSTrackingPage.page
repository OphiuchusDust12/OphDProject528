<!--
 - Created by arnab.karsarkar on 11/18/2016.
 -->
<apex:page id="TimeLineChartTFSTrackingPage" controller="GanttChartTFSProjectController" standardStylesheets="false" sideBar="false">

    <apex:includeScript value="{!$Resource.GoogleGanttChart}"/>
    <apex:includeScript value="{!URLFOR($Resource.inContactResource, '/inContactResource/js/jquery-3.1.1.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.inContactResource, '/inContactResource/js/bootstrap.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.inContactResource, '/inContactResource/css/bootstrap.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.inContactResource, '/inContactResource/css/bootstrap-theme.min.css')}"/>

    <script>

   //Comments to be updated
    var chart, chart1;
    var program = [];
    var teams = [];
    var dataProgram;
    var dataTeam;

    jQuery(document).ready(function(){
         initChart([], []);
    });

    function onChangeProj(obj)
    {
        program = [];
        var parentTbl = jQuery(obj).closest('tr').closest('table');
        var programChkboxes = [];
        jQuery(parentTbl).children('tbody').children('tr').each(function(){
              var childObj = jQuery(this).children('td').children('input');

              if(jQuery(childObj).is(':checked')){
                  programChkboxes.push(childObj);
                  program.push(jQuery(childObj).val());
              }
           }) ;
        if(program == ''){

          program.push('None');
        }

        initChart(program, teams);
       // console.log('program ==>' + program);
    }

    function onChangeTeam(thisObj)
    {
        teams = [];
        var parentTbl = jQuery(thisObj).closest('tr').closest('table');
        var teamCheckboxes = [];
        jQuery(parentTbl).children('tbody').children('tr').each(function(){
              var childObj = jQuery(this).children('td').children('input');

              if(jQuery(childObj).is(':checked')){
                  teamCheckboxes.push(childObj);
                  teams.push(jQuery(childObj).val());
              }
           }) ;
         if(teams == ''){
           teams.push('None');
        }
         //console.log('teams ==>' + teams);
         //console.log('program ==>' + program);
         initChart(program,  teams);
    }

    function daysToMilliseconds(days) {
      return days * 24 * 60 * 60 * 1000;
    }

    function initChart(projName, team){
      google.charts.load('current', {'packages':['timeline']});
      google.charts.setOnLoadCallback(function()
      {
        drawChart(projName, team);
      });
    }


    function handleTeamClick(){
      var selection = chart1.getSelection();
      var message = '';
      if(JSON.stringify(selection) != '[{"row":null,"column":null}]'){
      if (selection) {
        var value = dataTeam.getValue(selection[0].row, 1);
        var numb = value.match(/\d/g);
        numb = numb.join("");
        GanttChartTFSProjectController.RedirectToProject(numb, function(result, event){
            if(event.status){
                chart1.setSelection([]);
               window.open(result, '_blank')
            }
            },{escape:true}
        );
      }
      }
    }

      function drawChart(projName, team ) {
        GanttChartTFSProjectController.getChartData(
          projName,
          team,
          function(result, event){
             if(event.status){
                drawChartByTeam(result);
                drawChartByProgram(result);
             }
          },
          {escape:true}
        );
      }


    function drawChartByTeam(result){
        var numOfRows = 0;
        var timelineColor = [];
        dataTeam = new google.visualization.DataTable();
        dataTeam.addColumn({ type: 'string', id: 'Project ID' });
        dataTeam.addColumn({ type: 'string', id: 'Project Name' });
        dataTeam.addColumn({type: 'string', role: 'style'});
        dataTeam.addColumn({ type: 'date', id: 'Start' });
        dataTeam.addColumn({ type: 'date', id: 'End' });
        dataTeam.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});

         result.lstChartData = result.lstChartData.sort(
                                      sort_by('Team', {
                                                name: 'StartDate',
                                                primer: parseInt,
                                                reverse: false
                                                }));

        for (var i = 0; i < result.lstChartData.length; i++) {
            var r = result.lstChartData[i];
            // console.log('result =' + JSON.stringify(r));
            dataTeam.addRow([r.Team, r.ProjectName,r.ProgramColor, new Date(r.StartDate),new Date(r.EndDate), buildPopUp(r)]);
            //timelineColor.push(r.ProgramColor);
            numOfRows++;
            jQuery("input[value='" + r.ProductChannelFullName + "']").next().css({"background-color": r.ProgramColor,"font-weight" : "normal", "color" : r.ProgramFontColor, "font-size" : "13px"});
            r = '';

        }

        for (var i = 0; i < result.lstSprintData.length; i++) {
             var r = result.lstSprintData[i];
             var color = '';
             if(i%2 == 0)
                color = '#848587';
             else
                 color = '#4D5656';
             dataTeam.addRow(['Iterations', r.Sprint__c ,color, new Date(r.StartDate__c),new Date(r.EndDate__c),buildSprintPopUp(r)]);
             numOfRows++;
        }

        var options = {
             height: 20*numOfRows,
             avoidOverlappingGridLines: false,
             width:1100
        };

        console.log('data =>' + dataTeam.toJSON());

        chart1 = new google.visualization.Timeline(document.getElementById('team_div'));
        google.visualization.events.addListener(chart1, 'select', handleTeamClick);
        chart1.clearChart();
        chart1.draw(dataTeam, options);
        google.visualization.events.addListener(chart1, 'onmouseover', function (e){
             if(e.row != null){
                $(".google-visualization-tooltip").html(dataTeam.getValue(e.row,5)).css({width:"500px",height:"auto"});
             }
        });
    }

    function drawChartByProgram(result){
        var numOfRows = 0;
        var timelineColor = [];
        dataProgram = new google.visualization.DataTable();
        dataProgram.addColumn({ type: 'string', id: 'Project ID' });
        dataProgram.addColumn({ type: 'string', id: 'Project Name' });
        dataProgram.addColumn({type: 'string', role: 'style'});
        dataProgram.addColumn({ type: 'date', id: 'Start' });
        dataProgram.addColumn({ type: 'date', id: 'End' });
        dataProgram.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});

        result.lstChartData = result.lstChartData.sort(
                                      sort_by('ProductChannel', {
                                                name: 'StartDate',
                                                primer: parseInt,
                                                reverse: false
                                                }));

        for (var i = 0; i < result.lstChartData.length; i++) {

             var r = result.lstChartData[i];
             console.log('result =' + JSON.stringify(r));
             dataProgram.addRow([r.ProductChannel, r.ProjectName, r.TeamColor, new Date(r.StartDate),new Date(r.EndDate), buildPopUp(r)]);
             jQuery("input[value='" + r.Team + "']").next().css({"background-color": r.TeamColor, "color" : r.TeamFontColor, "font-weight" : "normal", "font-size" : "13px"});
             numOfRows ++;
             r = '';
        }


        for (var i = 0; i < result.lstSprintData.length; i++) {
             var r = result.lstSprintData[i];
             var color = '';
             if(i%2 == 0)
                color = '#848587';
             else
                 color = '#4D5656';

             console.log('Sprint__c =>' + r.Sprint__c);
             dataProgram.addRow(['Iterations', r.Sprint__c ,color, new Date(r.StartDate__c),new Date(r.EndDate__c),buildSprintPopUp(r)]);
             //timelineColor.push('#848587');
             //timelineColor.push('#4D5656');
             numOfRows ++;
        }

         if(numOfRows < 20)
            numOfRows = 20;
        var options = {
             height: 15*numOfRows,
             avoidOverlappingGridLines: false,
             width:1100
        };


        chart = new google.visualization.Timeline(document.getElementById('program_div'));
        google.visualization.events.addListener(chart, 'select', handleProjectClick);
        chart.clearChart();
        chart.draw(dataProgram, options);
        google.visualization.events.addListener(chart, 'onmouseover', function (e){
             if(e.row != null){
                $(".google-visualization-tooltip").html(dataProgram.getValue(e.row,5)).css({width:"550px",height:"auto"});
             }
        });

    }


   function handleProjectClick(){
      var selection = chart.getSelection();
      var message = '';
      if(JSON.stringify(selection) != '[{"row":null,"column":null}]'){
          if (selection) {


            var value = dataProgram.getValue(selection[0].row, 1);
            console.log('value ' + value);
            var numb = value.match(/\d/g);
            numb = numb.join("");
            GanttChartTFSProjectController.RedirectToProject(numb, function(result, event){
                if(event.status){
                     chart.setSelection([]);
                     window.open(result, '_blank');
                }
                },{escape:true}
            );

          }
      }
    }

   function buildPopUp(r){
       var manager = '';
        if(typeof r.ProjectManager != 'undefined')
            manager = r.ProjectManager;
        var buffer = "";
        buffer = '<div  style="width:100%"><div class="row tooltipRow"><div class="col-sm-4" > Project#</div><div class="col-sm-8"><b>' + r.ProjectId + '</b></div></div>';
        buffer += '<div class="row tooltipRow"><div class="col-sm-4"> Project Title</div><div class="col-sm-8"><b>' + r.ProjectName + '</b></div></div>';
        buffer += '<div class="row tooltipRow"><div class="col-sm-4"> Project status</div><div class="col-sm-8"><b>' + r.ProjectStatus + '</b></div></div>';
        buffer += '<div class="row tooltipRow"><div class="col-sm-4" > Project channel</div><div class="col-sm-8"><b>' +  r.ProductChannelFullName + '</b></div></div>';
        buffer += '<div class="row tooltipRow"><div class="col-sm-4" style="white-space nowrap"> Project Execution Team</div><div class="col-sm-8"><b>' +  r.Team + '</b></div></div>';
        buffer += '<div class="row tooltipRow"> <div class="col-sm-4"> T Shirt Size</div><div class="col-sm-8"><b>' + r.TShirtSize + '</b></div></div>';
        buffer += '<div class="row tooltipRow"> <div class="col-sm-4"> Priority</div><div class="col-sm-8"><b>' + r.GlobalPriority+ '</b></div></div>';
        buffer += '<div class="row tooltipRow"> <div class="col-sm-4">Project Manager</div><div class="col-sm-8"><b>'+manager +"</b></div></div></div>";
       // buffer += "<label> Business Analyst: " + "</label></br>";
        return buffer;
     }

    function buildSprintPopUp(r){
     //r.Sprint__c ,color, new Date(r.StartDate__c),new Date(r.EndDate__c)
        var buffer = "";
        buffer = '<div  style="width:100%"><div class="row tooltipRow"><div class="col-sm-4" > Sprint</div><div class="col-sm-8"><b>' + r.Sprint__c + '</b></div></div>';
        buffer += '<div class="row tooltipRow"><div class="col-sm-4"> Sprint Start Date</div><div class="col-sm-8"><b>' + GetFormattedDate(r.StartDate__c) + '</b></div></div>';
        buffer += '<div class="row tooltipRow"><div class="col-sm-4"> Sprint End Date</div><div class="col-sm-8"><b>' + GetFormattedDate(r.EndDate__c)+ '</b></div></div></div>';
        return buffer;
     }




     var sort_by;
     (function() {
            // utility functions
            var default_cmp = function(a, b) {
                if (a == b) return 0;
                return a < b ? -1 : 1;
            },
                getCmpFunc = function(primer, reverse) {
                    var cmp = default_cmp;
                    if (primer) {
                        cmp = function(a, b) {
                            return default_cmp(primer(a), primer(b));
                        };
                    }
                    if (reverse) {
                        return function(a, b) {
                            return -1 * cmp(a, b);
                        };
                    }
                    return cmp;
                };

            // actual implementation
            sort_by = function() {
                var fields = [],
                    n_fields = arguments.length,
                    field, name, reverse, cmp;

                // preprocess sorting options
                for (var i = 0; i < n_fields; i++) {
                    field = arguments[i];
                    if (typeof field === 'string') {
                        name = field;
                        cmp = default_cmp;
                    }
                    else {
                        name = field.name;
                        cmp = getCmpFunc(field.primer, field.reverse);
                    }
                    fields.push({
                        name: name,
                        cmp: cmp
                    });
                }

                return function(A, B) {
                    var a, b, name, cmp, result;
                    for (var i = 0, l = n_fields; i < l; i++) {
                        result = 0;
                        field = fields[i];
                        name = field.name;
                        cmp = field.cmp;

                        result = cmp(A[name], B[name]);
                        if (result !== 0) break;
                    }
                    return result;
                }
            }
        }());

    </script>

    <apex:form >
        <style>
            body {
            font-family: Roboto;
            }

            fieldset
            {
                width:100%
            }

            .tooltipRow{
                    border-bottom: 1px solid rgba(128, 128, 128, 0.14);
                    margin-left:1px;
                    white-space:
            }

        </style>

        <div style="padding-bottom: 5px;position: relative; left: 21%; width:65%">

            <div class="row">
                <div class="col-sm-4 teamList">

                    <label>Teams</label>
                    <apex:selectCheckboxes title="Teams"  styleClass="selectedFilter"  layout="pageDirection" style="font-weight:100; margin-left: 11%;width: 100%;" value="{!selectedTeams}" onChange="onChangeTeam(this);" id="teamCheckBoxes">
                        <apex:selectOptions value="{!TeamLists}" />
                    </apex:selectCheckboxes>
                </div>
                <div class="col-sm-8 ">
                    <label>Programs</label>
                    <apex:selectCheckboxes title="Programs"  value="{!selectedPrograms}" onChange="onChangeProj(this);"  layout="pageDirection" style="margin-left: 6%;width: 100%; color:white; font-weight:100">
                        <apex:selectOptions value="{!programs}" />
                    </apex:selectCheckboxes>
                </div>
            </div>
            <div id="program_div"></div>
            <div id="team_div"></div>
        </div>

    </apex:form>
</apex:page>