<!--
 - Created by arnab.karsarkar on 11/18/2016.
 -->
<apex:page id="TimeLineChartTFSTrackingPage" controller="GanttChartTFSProjectController" standardStylesheets="false" sideBar="false">

    <apex:includeScript value="{!$Resource.GoogleGanttChart}"/>
    <apex:includeScript value="{!URLFOR($Resource.inContactResource, '/inContactResource/js/jquery-3.1.1.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.inContactResource, '/inContactResource/js/bootstrap.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.inContactResource, '/inContactResource/css/bootstrap.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.inContactResource, '/inContactResource/css/bootstrap-theme.min.css')}"/>

    <script>

   //Comments to be updated
    var chart;
    var program = [];
    var teams = [];
    var data;

    jQuery(document).ready(function(){
         initChart([], []);
    });

    function onChangeProj(obj)
    {
        program = [];
        var parentTbl = jQuery(obj).closest('tr').closest('table');
        var programChkboxes = [];
        jQuery(parentTbl).children('tbody').children('tr').each(function(){
              var childObj = jQuery(this).children('td').children('input');

              if(jQuery(childObj).is(':checked')){
                  programChkboxes.push(childObj);
                  program.push(jQuery(childObj).val());
              }
           }) ;
        if(program == ''){
            alert("You cannot uncheck all checkboxes.");
            jQuery(programChkboxes).each(function(){
             jQuery(this).prop('checked', true);
            });
            return;
        }

        initChart(program, teams);
        console.log('program ==>' + program);
    }

    function onChangeTeam(thisObj)
    {
        teams = [];
        var parentTbl = jQuery(thisObj).closest('tr').closest('table');
        var teamCheckboxes = [];
        jQuery(parentTbl).children('tbody').children('tr').each(function(){
              var childObj = jQuery(this).children('td').children('input');

              if(jQuery(childObj).is(':checked')){
                  teamCheckboxes.push(childObj);
                  teams.push(jQuery(childObj).val());
              }
           }) ;
         if(teams == ''){
            alert("You cannot uncheck all checkboxes.");
            jQuery(teamCheckboxes).each(function(){
                jQuery(this).prop('checked', true);
            });
            return;
        }
         console.log('teams ==>' + teams);
         initChart(program,  teams);
    }

    function daysToMilliseconds(days) {
      return days * 24 * 60 * 60 * 1000;
    }

    function initChart(projName, team){
      google.charts.load('current', {'packages':['timeline']});
      google.charts.setOnLoadCallback(function()
      {
        drawChart(projName, team);
      });
    }

    function handleProjectClick(myvis){
      var selection = chart.getSelection();
      var message = '';
      if (selection) {
        var value = data.getValue(selection[0].row, 1);
        var numb = value.match(/\d/g);
        numb = numb.join("");
        GanttChartTFSProjectController.RedirectToProject(numb, function(result, event){
            if(event.status){
                window.location.href = result;
            }
            },{escape:true}
        );
      }
    }
      function drawChart(projName, team ) {
        GanttChartTFSProjectController.getChartData(
          projName,
          team,
          function(result, event){
             if(event.status){

                drawChartByTeam(result);
                drawChartByProgram(result);
             }
          },
          {escape:true}
        );
      }


    function drawChartByTeam(result){
        var numOfRows;
        var timelineColor = [];
        data = new google.visualization.DataTable();
        data.addColumn({ type: 'string', id: 'Project ID' });
        data.addColumn({ type: 'string', id: 'Project Name' });
        data.addColumn({ type: 'date', id: 'Start' });
        data.addColumn({ type: 'date', id: 'End' });
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});

        for (var i = 0; i < result.lstChartData.length; i++) {
             var r = result.lstChartData[i];
             console.log('result =' + JSON.stringify(r));
             data.addRow([r.Team, r.ProjectName, new Date(r.StartDate),new Date(r.EndDate), buildPopUp(r)]);
             timelineColor.push(r.ProgramColor);
             numOfRows = i;

            jQuery("input[value='" + r.ProductChannel + "']").next().css({"background-color": r.ProgramColor,"font-weight" : "normal"});

             r = '';

        }

        console.log('timelineColor =>' + timelineColor);


        for (var i = 0; i < result.lstSprintData.length; i++) {
             var r = result.lstSprintData[i];
             data.addRow(['Iterations', r.Sprint__c , new Date(r.StartDate__c),new Date(r.EndDate__c),r.Sprint__c]);
             timelineColor.push('#848587');
              numOfRows = i;
        }
        numOfRows += 3;
        var options = {
             height: 60*numOfRows,
             avoidOverlappingGridLines: false,
             colors : timelineColor,
             width:1100
        };



        chart = new google.visualization.Timeline(document.getElementById('team_div'));
        google.visualization.events.addListener(chart, 'select', handleProjectClick);
        chart.clearChart();
        chart.draw(data, options);
        google.visualization.events.addListener(chart, 'onmouseover', myHandler);

    }

    function myHandler(e){
             if(e.row != null){
                $(".google-visualization-tooltip").html(data.getValue(e.row,4)).css({width:"auto",height:"auto"});
             }
     }

    function drawChartByProgram(result){
        var numOfRows;
        var timelineColor = [];
        var data = new google.visualization.DataTable();
        data.addColumn({ type: 'string', id: 'Project ID' });
        data.addColumn({ type: 'string', id: 'Project Name' });
        data.addColumn({ type: 'date', id: 'Start' });
        data.addColumn({ type: 'date', id: 'End' });
        data.addColumn({type: 'string', role: 'tooltip', 'p': {'html': true}});

        result.lstChartData.sort(function(a, b){
            var channelA=a.ProductChannel.toLowerCase(), channelB=b.ProductChannel.toLowerCase();
            if (channelA < channelB) //sort string ascending
                return -1
            if (channelA > channelB)
                return 1
            return 0 //default return value (no sorting)
        });


        for (var i = 0; i < result.lstChartData.length; i++) {

             var r = result.lstChartData[i];
             console.log('result =' + JSON.stringify(r));
             data.addRow([r.ProductChannel, r.ProjectName, new Date(r.StartDate),new Date(r.EndDate), buildPopUp(r)]);
             timelineColor.push(r.TeamColor);
             jQuery("input[value='" + r.Team + "']").next().css({"background-color": r.TeamColor, "font-weight" : "normal"});
             numOfRows = i;
             r = '';
        }


        for (var i = 0; i < result.lstSprintData.length; i++) {
             var r = result.lstSprintData[i];
             data.addRow(['Iterations', r.Sprint__c , new Date(r.StartDate__c),new Date(r.EndDate__c),r.Sprint__c]);
             timelineColor.push('#848587');
        }
        numOfRows += 3;
        var options = {
             height: 50*numOfRows,
             avoidOverlappingGridLines: false,
             colors : timelineColor,
             width:1100
        };



        chart = new google.visualization.Timeline(document.getElementById('program_div'));
        google.visualization.events.addListener(chart, 'select', handleProjectClick);
        chart.clearChart();
        chart.draw(data, options);
        google.visualization.events.addListener(chart, 'onmouseover', myHandler);
        function myHandler(e){
             if(e.row != null){
                $(".google-visualization-tooltip").html(data.getValue(e.row,4)).css({width:"auto",height:"auto"});
             }
        }
    }



    function buildPopUp(r){

        var buffer;
        buffer = "<label>Project #</label></br>";
        buffer += "<label> Project Title: " +  r.ProjectName + "</label></br>";
        buffer += "<label> Project Status: In Queue" + "</label></br>";
        buffer += "<label> Project Channel: " +  r.Dependency + "</label></br>";
        buffer += "<label> Project Execution Team: " +  r.Type + "</label></br>";
        buffer += "<label> T Shirt Size: Medium" + "</label></br>";
        buffer += "<label> Project Manager: Tyson Whetton </label></br>";
        buffer += "<label> Business Analyst: John Doucette" + "</label></br>";
        return buffer;
     }
    </script>

    <apex:form >
        <style>
            body {
            font-family: Roboto;
            }

            fieldset
            {
                width:30%
            }

        </style>

        <div style="padding-bottom: 5px;position: relative; left: 21%; width:65%">

            <div class="row">
                <div class="col-sm-4 teamList">

                   <label>Teams</label>
                    <apex:selectCheckboxes title="Teams"  styleClass="selectedFilter"  layout="pageDirection" style="margin-left: 11%;width: 100%;" value="{!selectedTeams}" onChange="onChangeTeam(this);" id="teamCheckBoxes">
                        <apex:selectOptions value="{!TeamLists}" />
                    </apex:selectCheckboxes>
                    </div>
                <div class="col-sm-8">
                   <label>Programs</label>
                    <apex:selectCheckboxes title="Programs"  value="{!selectedPrograms}" onChange="onChangeProj(this);"  layout="pageDirection" style="margin-left: 6%;width: 100%; color:white;">
                        <apex:selectOptions value="{!programs}" />
                    </apex:selectCheckboxes>
                </div>
            </div>
        <div id="program_div"></div>
        <div id="team_div"></div>
        </div>
    </apex:form>
</apex:page>

