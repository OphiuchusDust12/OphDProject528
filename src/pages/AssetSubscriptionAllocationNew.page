<!--
 - Created by ravish.chawla on 10/12/2017.
 -->

<apex:page id="AssetSubscriptionAllocationNew" sideBar="false" controller="AssetSubscriptionAllocationNewController" title="Asset/Subscription Allocation" tabStyle="Project__c">

    <apex:includeScript value="{!URLFOR($Resource.inContactResource, '/inContactResource/js/jquery-3.1.1.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.KendoUIGanttChart, '/kendo-UI/js/kendo.all.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.inContactResource, '/inContactResource/js/bootstrap.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.AllocationStaticResources, '/AllocationStaticResources/js/AssetAllocation.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.AllocationStaticResources, '/AllocationStaticResources/js/SubscriptionAllocation.js')}"/>

    <apex:stylesheet value="{!URLFOR($Resource.inContactResource, '/inContactResource/css/bootstrap.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.inContactResource, '/inContactResource/css/bootstrap-theme.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoUIGanttChart, '/kendo-UI/styles/kendo.common.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoUIGanttChart, '/kendo-UI/styles/kendo.default.mobile.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoUIGanttChart, '/kendo-UI/styles/kendo.default.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoUIGanttChart, '/kendo-UI/styles/kendo.silver.min.css')}"/>

    <apex:sectionHeader subtitle="{!Asset.Name}" title="Asset Allocation" rendered="{!NOT(ISNULL(Asset))}"/>

    <apex:sectionHeader subtitle="{!Subscription.Name}" title="Subscription Allocation" rendered="{!NOT(ISNULL(Subscription))}"/>

    <apex:sectionHeader subtitle="{!Project.Name}" title="Project Allocation" rendered="{!NOT(ISNULL(Project))}"/>


    <style>
        .image {
            padding-left:15px;
        }
        #detailTable .k-grid-header .k-header {
            background-color: #3f51b5 !important;
            border-color: #3343a4 !important;
            color : white !important;

        }
        #detailTable .k-grid-header .k-header>.k-link{
              color : white !important;
        }

        #detailSubscriptionTable .k-grid-header .k-header {
            background-color: #3f51b5 !important;
            border-color: #3343a4 !important;
            color : white !important;

        }
        #detailSubscriptionTable .k-grid-header .k-header>.k-link{
              color : white !important;
        }

        .spinnerClass {
            background:url('../../img/loading32.gif') no-repeat;
            height:32px;
            margin:20px;
            padding-left:40px;
            padding-top:9px;
            font-size: 0.75em;
        }
        .msgIcon {
             display: none!important
        }
        .customMessage * {
            color: #fff!important
        }
        .customMessage {
            margin: 5px 0!important;
            max-width: 1280px;

            width: 100%;
            font-size: 12px;
            border: 0px;
            padding-left: 10px;
        }
        .message {
            opacity: 1.1
        }
        .message .messageText h4 {
           display: none;
        }

    </style>
    <apex:form id="myform">
        <apex:outputPanel id="detailSection">
            <apex:pageBlock title="Project Detail" rendered="{!Not(ISNULL(Project))}" id="detailProject">
                <apex:pageBlockButtons title="" location="bottom">
                    <apex:commandButton title="Back" value="Back" action="{!cancel}" immediate="true"/>
                </apex:pageBlockButtons>
                <apex:pageBlockSection columns="2" >
                    <apex:repeat value="{!$ObjectType.Project__c.FieldSets.PS_Project_Allocation}" var="f">
                        <apex:outputfield value="{!Project[f]}" />
                    </apex:repeat>
                </apex:pageBlockSection>
            </apex:pageBlock>

            <apex:pageBlock title="Asset Detail" rendered="{!Not(ISNULL(asset))}" id="detailAsset">
                <apex:pageBlockButtons title="" location="bottom">
                    <apex:commandButton title="Back" value="Back" action="{!cancel}" immediate="true"/>
                    <apex:outputPanel rendered="{!Asset.Quantity > 1 && !Asset.FullyImplemented__c}">
                        <button title="Edit On Hold/Cancelled Quantity " onClick="openEditCancSuspQuantityModal(); return false;">
                            Edit On Hold/Cancelled Quantity
                        </button>
                    </apex:outputPanel>
                </apex:pageBlockButtons>
                <!--<apex:pageBlockSection columns="2">-->
                    <!--<apex:repeat value="{!$ObjectType.Asset.FieldSets.PS_Asset_Allocation}" var="f">-->
                        <!--<apex:outputfield value="{!Asset[f]}" />-->
                    <!--</apex:repeat>-->
                <!--</apex:pageBlockSection>-->
                <apex:pageBlockSection columns="2" rendered="{!Asset.Quantity > 1}">
                    <apex:repeat value="{!$ObjectType.Asset.FieldSets.PS_Asset_Allocation_GrTh1_Fields}" var="f">
                        <apex:outputfield value="{!Asset[f]}" />
                    </apex:repeat>
                </apex:pageBlockSection>
                <apex:pageBlockSection columns="2" rendered="{!Asset.Quantity <= 1}">
                    <apex:repeat value="{!$ObjectType.Asset.FieldSets.PS_Asset_Allocation_Eq1_Fields}" var="f">
                        <apex:outputfield value="{!Asset[f]}" />
                    </apex:repeat>
                </apex:pageBlockSection>
               <apex:pageBlockSection columns="2" >
                   <apex:outputfield value="{!Asset.ImplementedProduct__c}" />
               </apex:pageBlockSection>
               <div style="float:left; position:relative; top:-24px; left :25%; font-size: 12.12px;">
                   [<a style="color:blue;cursor:pointer;" data-toggle="modal" data-target="#ImplementedProducts">Select Implemented Product</a>]
               </div>
                <apex:pageBlockSection columns="2" rendered="{!Asset.Quantity > 1}" id="cancSuspQuanPBS">
                    <apex:repeat value="{!$ObjectType.Asset.FieldSets.PS_Asset_Allocation_Editable_Fields}" var="f">
                        <apex:outputfield value="{!Asset[f]}" />
                    </apex:repeat>
                </apex:pageBlockSection>
            </apex:pageBlock>

            <apex:pageBlock title="Subscription Detail" rendered="{!Not(ISNULL(Subscription))}" id="detailSubscription">
                <apex:pageBlockButtons title="" location="bottom">
                    <apex:commandButton title="Back" value="Back" action="{!cancel}" immediate="true"/>
                    <apex:outputPanel rendered="{!Subscription.Quantity__c > 1 && !Subscription.FullyImplemented__c}">
                        <button title="Edit On Hold/Cancelled Quantity " onClick="openSubsEditCancSuspQuantityModal(); return false;">
                            Edit On Hold/Cancelled Quantity
                        </button>
                    </apex:outputPanel>
                </apex:pageBlockButtons>
                <!--<apex:pageBlockSection columns="2" >-->
                    <!--<apex:repeat value="{!$ObjectType.SubscriptionReplica__c.FieldSets.PS_Subscription_Allocation}" var="f">-->
                        <!--<apex:outputfield value="{!Subscription[f]}" />-->
                    <!--</apex:repeat>-->
                <!--</apex:pageBlockSection>-->
                <apex:pageBlockSection columns="2" rendered="{!Subscription.Quantity__c > 1}">
                    <apex:repeat value="{!$ObjectType.SubscriptionReplica__c.FieldSets.PS_Subscription_Allocation_GrTh1_Fields}" var="f">
                        <apex:outputfield value="{!Subscription[f]}" />
                    </apex:repeat>
                </apex:pageBlockSection>
                <apex:pageBlockSection columns="2" rendered="{!Subscription.Quantity__c <= 1}">
                    <apex:repeat value="{!$ObjectType.SubscriptionReplica__c.FieldSets.PS_Subscription_Allocation_Eq1_Fields}" var="f">
                        <apex:outputfield value="{!Subscription[f]}" />
                    </apex:repeat>
                </apex:pageBlockSection>
                <apex:pageBlockSection columns="2" >
                    <apex:outputfield value="{!Subscription.Implemented_Product__c}" />
                </apex:pageBlockSection>
                <div style="float:left; position:relative; top:-24px; left :25%; font-size: 12.12px;">
                    [<a style="color:blue;cursor:pointer;" data-toggle="modal" data-target="#ImplementedProducts">Select Implemented Product</a>]
                </div>
                <apex:pageBlockSection columns="2" rendered="{!Subscription.Quantity__c > 1}" id="subsCancSuspQuanPBS">
                    <apex:repeat value="{!$ObjectType.SubscriptionReplica__c.FieldSets.PS_Subscription_Alloc_Editable_Fields}" var="f">
                        <apex:outputfield value="{!Subscription[f]}" />
                    </apex:repeat>
                </apex:pageBlockSection>
            </apex:pageBlock>
        </apex:outputPanel>
        <div id="assetAllocationPanel">
            <apex:pageBlock id="assetAllocationBlock">
                <apex:pageBlockSection collapsible="false"  columns="1" showHeader="true" title="Asset Allocation"/>
                <div id="assetAllocationList"></div>
            </apex:pageBlock>
        </div>
        <div id="subscriptiontAllocationPanel">
            <apex:pageBlock id="subscriptiontAllocationBlock">
                <apex:pageBlockSection collapsible="false"  columns="1" showHeader="true" title="Subscription Allocation"/>
                <div id="subscriptionAllocationList"></div>
                <div id="window"></div>
            </apex:pageBlock>
        </div>
        <!-- Confirmation Modal -->
        <div class="modal fade" id="warning" tabindex="-1" role="dialog" aria-labelledby="warning" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel" style="font-weight:bold">Alert</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" style="font-size:14px;">
                        <div id="java-errors" class=" alert alert-danger message-alert" style="margin-left:15px;width:90%; display:none;"></div>
                        <div id="success" class=" alert alert-success message-alert" style="margin-left:15px;width:90%; display:none;"></div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn button-cancel" data-dismiss="modal" style="color:black !important;">OK</button>
                    </div>
                </div>
            </div>
        </div>

        <!--Asset Cancelled and Suspended Quantity-->
        <div class="modal fade" id="assetCanSuspQuanMod" tabindex="-1" role="dialog" aria-labelledby="warning" aria-hidden="true">
            <apex:outputPanel rendered="{!Not(ISNULL(asset))}">
                <div class="modal-dialog" role="document" style="width:60%;">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="cancSuspModalLabel" style="font-weight:bold">Edit On Hold/Cancelled Quantity </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body" style="font-size:14px;">
                            <apex:pageBlock id="cancSuspPageBlck" >
                                <apex:pageMessages id="messages" />

                                <apex:pageBlockSection columns="2" >
                                    <apex:repeat value="{!$ObjectType.Asset.FieldSets.PS_Asset_Allocation_Editable_Fields}" var="f">
                                        <apex:inputField value="{!Asset[f.fieldPath]}"/>
                                    </apex:repeat>
                                </apex:pageBlockSection>
                            </apex:pageBlock>
                        </div>
                        <div class="modal-footer">
                            <apex:outputPanel id="deleteAllocationSection" style="float:left;" >
                                <apex:actionStatus id="deleteAllocationAsset" >
                                    <apex:facet name="stop">
                                        <apex:commandButton value="Delete All Non-Implemented Allocations" reRender="messages" status="deleteAllocationAsset" rendered="{!showdeleteButton}" action="{!deleteAssetAllocation}" onComplete="overridePageMessages('delete');"/>
                                    </apex:facet>
                                    <apex:facet name="start">
                                        <apex:outputPanel >
                                            <apex:image value="/img/loading32.gif" style="height: 15px;"/>
                                            <apex:commandButton styleClass="k-button"  value="Deleting..." status="deleteAllocationAsset" disabled="true"/>
                                        </apex:outputPanel>
                                    </apex:facet>
                                </apex:actionStatus>
                            </apex:outputPanel>
                            <!--<apex:commandButton reRender="cancSuspPageBlck, cancSuspQuanPBS" title="Cancel" value="Cancel" action="{!cancel}" immediate="true"/>-->
                            <apex:commandButton value="Save" action="{!SaveCancSuspQuantity}" reRender="cancSuspPageBlck, cancSuspQuanPBS, deleteAllocationSection"  style="color:black !important;" onComplete="overridePageMessages('save');"></apex:commandButton>
                            <apex:commandButton value="Save and Close" action="{!SaveCancSuspQuantity}" reRender="cancSuspPageBlck, cancSuspQuanPBS, refreshAfterSave, deleteAllocationSection"  style="color:black !important;" onComplete="overridePageMessages('saveClose');"></apex:commandButton>
                            <button type="button" class="btn button-cancel" data-dismiss="modal" style="color:black !important;">Cancel</button>
                        </div>
                    </div>
                </div>
            </apex:outputPanel>
        </div>

        <apex:outputPanel id="refreshAfterSave">
            <script>
                 var saveSuccess = {!saveSuccess};
            </script>
        </apex:outputPanel>

        <!--Subscription Cancelled and Suspended Quantity-->
        <div class="modal fade" id="subsCanSuspQuanMod" tabindex="-1" role="dialog" aria-labelledby="warning" aria-hidden="true" >
            <apex:outputPanel rendered="{!Not(ISNULL(Subscription))}">
                <div class="modal-dialog" role="document" style="width:56%;">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="subsCancSuspModalLabel" style="font-weight:bold">Edit On Hold/Cancelled Quantity</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"  onclick="reloadDetails();">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body" style="font-size:14px;">
                            <apex:pageBlock id="subsCancSuspPageBlck" >
                                <apex:pageMessages id="messagesSubs" />
                                <apex:pageBlockSection columns="2" >
                                    <apex:repeat value="{!$ObjectType.SubscriptionReplica__c.FieldSets.PS_Subscription_Alloc_Editable_Fields}" var="f">
                                        <apex:inputField value="{!Subscription[f.fieldPath]}"/>
                                    </apex:repeat>
                                </apex:pageBlockSection>
                            </apex:pageBlock>
                        </div>
                        <div class="modal-footer">
                            <apex:outputPanel id="deleteAllocationSectionSubs" style="float:left;" >
                                <apex:actionStatus id="deleteSubsAllocation" >
                                    <apex:facet name="stop">
                                        <apex:commandButton value="Delete All Non-Implemented Allocations" reRender="messagesSubs" status="deleteSubsAllocation" rendered="{!showdeleteButton}" action="{!deleteSubsAllocation}" onComplete="overridePageMessages('delete');"/>
                                    </apex:facet>
                                    <apex:facet name="start">
                                        <apex:outputPanel >
                                            <apex:image value="/img/loading32.gif" style="height: 15px;"/>
                                            <apex:commandButton styleClass="k-button"  value="Deleting..." status="deleteSubsAllocation" disabled="true"/>
                                        </apex:outputPanel>
                                    </apex:facet>
                                </apex:actionStatus>
                            </apex:outputPanel>
                            <apex:commandButton value="Save" action="{!SaveCancSuspQuantitySubs}" reRender="subsCancSuspPageBlck, subsCancSuspQuanPBS, deleteAllocationSectionSubs"  style="color:black !important;" onComplete="overridePageMessages('save');"></apex:commandButton>
                            <apex:commandButton value="Save and Close" action="{!SaveCancSuspQuantitySubs}" reRender="subsCancSuspPageBlck, subsCancSuspQuanPBS, refreshAfterSave, deleteAllocationSectionSubs"  style="color:black !important;" onComplete="overridePageMessages('saveClose');"></apex:commandButton>
                            <button type="button" class="btn button-cancel" data-dismiss="modal" style="color:black !important;" onclick="reloadDetails();">Cancel</button>
                        </div>
                    </div>
                </div>
            </apex:outputPanel>

        </div>


        <!-- loading Modal -->
        <div class="modal fade" id="loading" tabindex="-1" role="dialog" aria-labelledby="info" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content" style="width:40%; top: 182px;">
                    <div class="modal-body" style="font-size:14px;">
                        <div class="spinnerClass">Please wait</div>
                    </div>
                </div>
            </div>
        </div>
        <apex:actionFunction name="reloadDetails" action="{!reloadDetails}" reRender="detailSection,detailSubscription,detailAsset,detailProject, refreshScript, deleteAllocationSection, deleteAllocationSectionSubs" immediate="true"/>
        <apex:actionFunction name="reloadModal" action="{!reloadDetails}" reRender="subsCancSuspPageBlck,cancSuspPageBlck" immediate="true"/>

        <!--Implemented Product lists-->
        <div class="modal fade" id="ImplementedProducts" tabindex="-1" role="dialog" aria-labelledby="ImplementedProductslabel" aria-hidden="true" >
                <div class="modal-dialog" role="document" style="width:56%;">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="ImplementedProductsHeader" style="font-weight:bold">Implemented Products</h5>

                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body" style="font-size:14px;">
                            <apex:pageBlock>
                           <apex:pageBlockTable value="{!ImplementedProducts}" var="ip">
                               <apex:column>
                                   <apex:commandButton  value="Select" action="{!saveImplementedProduct}" rerender="detailAsset, detailSubscription" onComplete="closeModal();">
                                       <apex:param name="rowid" value="{!ip.Id}" assignTo="{!SelectedRowId}"/>
                                   </apex:commandButton>
                               </apex:column>
                               <apex:column headerValue="Name">
                                <apex:outputText value="{!ip.Name}"/>
                               </apex:column>
                               <apex:column value="{!ip.Account__c}" headerValue="Account"/>
                               <apex:column value="{!ip.Product__c}" headerValue="Product"/>
                               <apex:column value="{!ip.Status__c}" headerValue="Status"/>
                               <apex:column value="{!ip.GoLiveDate__c}" headerValue="Go Live Date"/>
                               <apex:column value="{!ip.EstimatedGoLiveDate__c}" headerValue="Estimated Go Live Date"/>
                           </apex:pageBlockTable>
                            </apex:pageBlock>
                        </div>
                        <div class="modal-footer">
                           <button type="button" class="btn button-cancel" data-dismiss="modal" style="color:black !important;">Close</button>
                        </div>
                    </div>
                </div>

        </div>

    </apex:form>
    <script type="text/x-kendo-template" id="windowTemplate">
        <p>Delete this Allocation for <strong>#= AssetName == null ? SubscriptionName : AssetName #</strong> ? </p>
        <p>Allocated Quantity = <strong>#= AllocatedQuantity == null ? 0 : AllocatedQuantity #</strong></p>
        <p>Allocated Hours % = <strong>#= AllocatedPercentage == null ? 0 : AllocatedPercentage #</strong></p>
        <p>Allocated Hours = <strong>#= AllocatedHours #</strong> </p>
        <div class="modal-footer">
            <button class="k-button" id="yesButton">Yes</button>
            <button class="k-button" id="noButton"> Cancel</button>
        </div>
    </script>
    <apex:outputPanel id="refreshScript">
    <script>


        $(document).ready(function() {
           getSObjType();

        });

        var  currentObjectType,
             Asset = new Object(),
             Project = new Object(),
             Subscription = new Object(),
             Product = new Object(),
             isManager = {!Manager},
             disableEdit = false,
             implemented = false;

        var windowTemplate = kendo.template($("#windowTemplate").html());

        function getSObjType(){
             var Subscriptiongrid = $("#subscriptionAllocationList").data("kendoGrid");
             if(Subscriptiongrid)
                Subscriptiongrid.destroy();
             var Assetgrid = $("#assetAllocationList").data("kendoGrid");
             if(Assetgrid)
              Assetgrid.destroy();
             AssetSubscriptionAllocationNewController.getObjectType(
               '{!currentId}',
                function(result, event){
                    if(event.status){
                        console.log('object type ==>' + result);
                        if(result.length > 1){
                            if(result == 'Asset'){
                              currentObjectType = result;
                              console.log('results =>' + JSON.stringify(result));
                              $("#subscriptiontAllocationPanel").hide();
                              Asset = new Object();
                              Asset.Id = '{!Asset.Id}';
                              Asset.Name = '{!Asset.Name}';
                              Asset.Quantity = '{!Asset.Quantity}';
                              Asset.Budgeted_Hours__c = '{!Asset.Budgeted_Hours__c}';
                              Asset.RemainingQuantity__c = '{!Asset.RemainingQuantity__c}';
                              Asset.Remaning_Percentage__c = '{!Asset.Remaning_Percentage__c}';
                              Asset.QuantityonHold__c = '{!Asset.QuantityonHold__c}';
                              Asset.QuantityCancelled__c = '{!Asset.QuantityCancelled__c}';
                              implemented = {!Asset.FullyImplemented__c};
                              console.log(Asset);
                              if(implemented || (Asset['Quantity'] == 1 && Asset['Remaning_Percentage__c'] <= 0) ){
                                  disableEdit = true;
                              }
                              assetAllocationData(null, '{!currentId}');

                              if(disableEdit){
                                   $("a.k-grid-add").hide();
                              }
                           }
                           else if(result == 'Subscription'){
                               currentObjectType = result;
                               console.log('results =>' + JSON.stringify(result));
                               $("#assetAllocationPanel").hide();
                                Subscription = new Object();
                              Subscription.Id = '{!Subscription.Id}';
                              Subscription.Name = '{!Subscription.Name}';
                              Subscription.Quantity = '{!Subscription.Quantity__c}';
                              Subscription.Budgeted_Hours__c = '{!Subscription.Budgeted_Hours__c}';
                              Subscription.RemainingQuantity__c = '{!Subscription.RemainingQuantity__c}';
                              Subscription.Remaning_Percentage__c = '{!Subscription.Remaning_Percentage__c}';
                              Subscription.QuantityonHold__c = '{!Subscription.QuantityonHold__c}';
                              Subscription.QuantityCancelled__c = '{!Subscription.QuantityCancelled__c}';
                              implemented = {!Subscription.FullyImplemented__c};
                              console.log(Subscription);
                              if(implemented || (Subscription['Quantity'] == 1 && Subscription['Remaning_Percentage__c'] <= 0) ){
                                  disableEdit = true;
                              }
                              subscriptionAllocationData(null, '{!currentId}');
                              if(disableEdit){
                                   $("a.k-grid-add").hide();
                              }
                           }else  if(result == 'Project'){
                              currentObjectType = result;
                              console.log('results =>' + JSON.stringify(result));
                              Project.Id = '{!Project.Id}';
                              Project.Name = '{!Project.Name}';
                              Project.Project_Phase_Allocation__c = '{!Project.Project_Phase_Allocation__c}';
                              subscriptionAllocationData('{!currentId}', null);
                              assetAllocationData('{!currentId}', null);
                              var projectGoLiveDate = '{!Project.ActualProjectGoLiveDate__c}';
                              if(projectGoLiveDate != '' && projectGoLiveDate != null){
                                   $("a.k-grid-add").hide();
                              }
                           }
                    }
                }
             });
        }



    function displayError(message){
         $("div#success").empty();
         $("div#success").hide();
         $("div#java-errors").css("display", "block");
         document.getElementById("java-errors").innerHTML =  message;
          $('#warning').modal('show');
         console.log('error =>' + message);
    }

    function hideError(){
         $("div#java-errors").css("display", "none");
         document.getElementById("java-errors").innerHTML = ' ';
    }

    function hideChildProjects(e){
                  setTimeout(function(){
                       $("#assetAllocationList").find(".k-hierarchy-cell, .k-hierarchy-col").hide();
                       $("#subscriptionAllocationList").find(".k-hierarchy-cell, .k-hierarchy-col").hide();
                  });
    }

     function openEditCancSuspQuantityModal(){
//            $("div#assetCanSuspQuanMod").modal('show');
            hideMessage();
            $('div#assetCanSuspQuanMod').modal({
                backdrop: 'static',
                keyboard: false
           });
           reloadModal();
     }
     function hideMessage(){
            $("div.cusotmMessage").hide();
        }

     function overridePageMessages(obj){
            $("div.cusotmMessage").show();
            var textureEffect = '';
            $('.warningM3').addClass('alert alert-warning');
            $('.confirmM3').addClass('alert alert-success');
            $('.errorM3').addClass('alert alert-danger');
            $('.infoM3').addClass('alert alert-info');
            $('.errorM3').removeClass('errorM3');
            $('.confirmM3').removeClass('confirmM3');
            $('.infoM3').removeClass('infoM3');
            $('.warningM3').removeClass('warningM3');

            if(obj=='saveClose' && saveSuccess == true){
                  $('div#assetCanSuspQuanMod').modal("hide");
                  $('div#subsCanSuspQuanMod').modal("hide");

            }

            reloadDetails();
      }

     function openSubsEditCancSuspQuantityModal(){
            hideMessage();
            $('div#subsCanSuspQuanMod').modal({
                backdrop: 'static',
                keyboard: false
           });
            reloadModal();
     }

    function closeModal(){
        $('div#ImplementedProducts').modal("hide");
    }

    function showHideAddButton(allocation){

        if(implemented || (allocation != '' && allocation['Quantity'] == 1 && allocation['RemainingPercentage'] <= 0) ){
            $("a.k-grid-add").hide();
        }else{
            $("a.k-grid-add").show();
        }

    }

    </script>
    </apex:outputPanel>
</apex:page>