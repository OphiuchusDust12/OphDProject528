<apex:page standardController="Case" extensions="CaseEventStatusChangeExtension" title="Event {!Case.CaseNumber}" >
    <apex:stylesheet value="{!URLFOR($Resource.KendoUI, '/styles/kendo.common.min.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.KendoUI, '/styles/kendo.custom.css')}" />
    <apex:stylesheet value="{!$Resource.SupportConsoleCss}" />
    <apex:form id="mainPage" rendered="{!NOT(ISBLANK(Case.Id))}">
        <apex:inputHidden value="{!success}" id="success"/>
        <!-- messages -->
        <apex:outputPanel id="editPanel">
            <apex:messages id="msg" styleClass="warning-message" />
        </apex:outputPanel>
        <apex:actionFunction reRender="info" name="refresh" id="refresh"/>
        <apex:pageBlock mode="edit">
            <apex:inputHidden value="{!Case.IgnoreEventStatusLock__c}"/>
            <apex:inputHidden value="{!Case.ProductImpacted__c}"/>
            <apex:inputHidden value="{!Case.PlatformsImpacted__c}"/>
            <apex:inputHidden value="{!Case.Description}"/>
            <apex:inputHidden value="{!Case.Priority}"/>
            <apex:inputHidden value="{!Case.InternalEvent__c}"/>
            <apex:inputHidden value="{!Case.EventResolvedEmailRequested__c}"/>
            <apex:pageBlockSection columns="1" >
                <apex:outputField value="{!Case.CaseNumber}"/>
                <apex:outputField value="{!Case.Subject}"/>
                <apex:selectList onchange="return refresh()" value="{!Case.Status}" size="1" multiselect="false" required="true">
                    <apex:actionsupport event="onchange" rerender="mainPage" />
                    <apex:selectOptions value="{!EventStatus}" />
                </apex:selectList> 
            </apex:pageBlockSection>

            <!-- Resolved picklists-->
            <apex:pageblocksection id="info" columns="1">

                <apex:inputfield value="{!Case.Reason__c}" rendered="{!Case.Status='Resolved'}" required="{!Case.Status='Resolved'}">
                    <apex:actionsupport event="onchange" rerender="mainPage"/>
                </apex:inputfield>

                <apex:inputfield value="{!Case.Database__c}" rendered="{!Case.Status='Resolved'}" required="{!Case.Status='Resolved'}" >
                    <apex:actionsupport event="onchange" rerender="mainPage"/>
                </apex:inputfield>

                <apex:inputfield value="{!Case.Releases__c}" rendered="{!Case.Status='Resolved'}" required="{!Case.Status='Resolved'}">
                    <apex:actionsupport event="onchange" rerender="mainPage"/>
                </apex:inputfield>
                <apex:pageBlockSectionItem rendered="{!ShowSendEventResolvedEmail}" >
                    <apex:outputLabel title="This will notify all associated Event Notification contacts"  >Send Notification Email</apex:outputLabel>
                    <apex:inputCheckbox title="This will notify all associated Event Notification contacts"  value="{!SetSendEventResovledEmail}" > 
                        <apex:actionsupport event="onchange" rerender="mainPage"/>
                    </apex:inputCheckbox> 
                </apex:pageBlockSectionItem>
                <apex:pageBlockSectionItem id="sendAlert" rendered="{!AND(ShowSendEventResolvedEmail,SetSendEventResovledEmail)}" >
                    <apex:outputLabel title="This will notify all associated Event Notification contacts"  ></apex:outputLabel>
                    <apex:outputPanel style="color:#FF0000;"  >Warning: This will notify all associated Event Notification contacts</apex:outputPanel>
                </apex:pageBlockSectionItem>

                <!-- Only Render the Justification if the Case Status is resolved and the type is Other-->
                <apex:inputfield id="justification" value="{!Case.OtherJustification__c}" rendered="{!Case.Releases__c='Other (enter details below)' && Case.Status='Resolved'}" />
            </apex:pageblocksection>

            <apex:pageBlockSection columns="1">
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Make Comment Public" for="public" title="If checked the comment will show up on Trust if the Event is public."  />
                    <apex:inputCheckbox id="public" value="{!publish}" title="If checked the comment will show up on Trust if the Event is public." />
                </apex:pageBlockSectionItem> 
                <apex:pageBlockSectionItem >
                    <apex:outputLabel value="Add Standard Text" for="noText" />
                    <apex:inputCheckbox id="noText" value="{!NoText}">
                        <apex:actionSupport event="onclick" rerender="mainPage" oncomplete="Restyle();"/>
                    </apex:inputCheckbox>
                </apex:pageBlockSectionItem>

                <apex:pageBlockSectionItem rendered="{!NoText}">
                    <apex:outputLabel value="Record Type" for="sRtype" />
                    <apex:selectList id="sRtype" size="1" value="{!SelectedRecordTypeId}">
                        <apex:selectOptions value="{!RecordTypeOptions}"></apex:selectOptions>
                        <!-- rerender the dependant "sText" dropdown to update values
                             and sTextDetail output panel to clear the Detail text -->
                        <apex:actionSupport event="onchange" rerender="mainPage" oncomplete="Restyle();"/>
                    </apex:selectList>
                </apex:pageBlockSectionItem>

                <apex:pageBlockSectionItem Rendered="{!NoText}" >
                    <apex:outputLabel value="Standard Text" for="sText" />
                    <apex:selectList id="sText" size="1" value="{!selectedStandardTextId}">
                        <apex:selectOptions value="{!StandardTextOptions}"></apex:selectOptions>
                        <!-- rerender "sTextDetail" to update the displayed text based on the "sText" changes -->
                        <apex:actionSupport event="onchange" rerender="mainPage"  oncomplete="Restyle();"/> 
                    </apex:selectList>
                </apex:pageBlockSectionItem> 

                <apex:pageBlockSectionItem >
                   <apex:outputLabel value="Comment (Required)" for="sTextDetail" />
                   <apex:outputPanel id="sTextDetail" layout="block">
                     <apex:inputTextarea style="width:400px" rows="8" id="detailValue" value="{!SelectedStandardText}"/> 
                   </apex:outputPanel>
               </apex:pageBlockSectionItem> 
            </apex:pageBlockSection>
            <apex:pageBlockButtons >
                <apex:commandButton id="save-button" styleClass="k-button submit" onclick="disableButton(this);" value="Save" action="{!Save}"  oncomplete="onCompleteHandler()" reRender="mainPage"/>
                <a id="cancel-button" href="#" onclick="CancelRequest()" class="k-button">Cancel</a>
            </apex:pageBlockButtons>
        </apex:pageBlock>
        <apex:actionFunction action="{!Cancel}" name="GoToCase"/>
        <apex:actionFunction action="{!RefreshPage}" name="Refresh" immediate="true" oncomplete="sforce.interaction.entityFeed.refreshObject('{!case.id}',false, true, true);"/>
    </apex:form>
    <apex:pageBlock title="Child Cases"  rendered="{!NOT(ISBLANK(Case.Id))}">
        <apex:pageBlockTable value="{!ChildCaseList}" var="cc">
            <apex:column >
                <apex:facet name="header">Case Number</apex:facet>
                <apex:outputField value="{!cc.CaseNumber}"/>
            </apex:column>
            <apex:column >
                <apex:facet name="header">Subject</apex:facet>
                <apex:outputField value="{!cc.Subject}"/>
            </apex:column>
            <apex:column >
                <apex:facet name="header">Account</apex:facet>
                <apex:outputField value="{!cc.Account.Name}"/>
            </apex:column>
            <apex:column >
                <apex:facet name="header">Account Number</apex:facet>
                <apex:outputField value="{!cc.Account.CostGuard_Acct__c}"/>
            </apex:column>
            <apex:column >
                <apex:facet name="header">Status</apex:facet>
                <apex:outputField value="{!cc.Status}"/>
            </apex:column>
        </apex:pageBlockTable>
    </apex:pageBlock>
    <apex:includeScript value="/support/console/28.0/integration.js"/>
    <apex:includeScript value="{!URLFOR($Resource.KendoUI, '/js/jquery.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.KendoUI, '/js/kendo.web.min.js')}" />
    <apex:includeScript value="{!$Resource.incontactjs}" />
    <script type="text/javascript">
        $(document).ready(function () {
            StyleButtons();
            //ChangeSelectsIntoButtons();
            
            
            
        });
        
        function Restyle(){
            StyleButtons();
            //ChangeSelectsIntoButtons();
        }
        
        function disableButton(input){
                $(input).prop('disabled', true);
        }
        
        function onCompleteHandler() {
          var successElement = document.getElementById('{!$Component.mainPage.success}');
          if($(successElement).val()=='true') {
            CancelRequest()
          } else {
              
            StyleButtons(); 
            //ChangeSelectsIntoButtons();
          }
        }
        
        function CancelRequest(){
            if (sforce.console.isInConsole()){
                doPrimaryTabRefresh();
            } else{
                GoToCase();
            }            
        }
    
        function currentTab() {
            //First find the ID of the current tab to close it
            sforce.console.getEnclosingTabId(refreshPrimaryTab);
        }
    
     var refreshPrimaryTab = function showTabId(result) {
            var tabId = result.id;
            sforce.console.refreshPrimaryTabById(tabId, true, currentTab);
        };
    
    function doPrimaryTabRefresh() {
            sforce.console.getEnclosingPrimaryTabId(refreshPrimaryTab);            
        }
    
    </script>
    
</apex:page>