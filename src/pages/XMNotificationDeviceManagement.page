<!--
 - Created by arnab.karsarkar on 5/2/2017.
 -->

<apex:page id="XMNotificationDeviceManagement" standardController="Contact" extensions="XMNotificationDeviceManageController">

    <apex:includeScript value="{!URLFOR($Resource.inContactResource, '/inContactResource/js/jquery-3.1.1.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.KendoUIGanttChart, '/kendo-UI/js/kendo.all.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.inContactResource, '/inContactResource/js/bootstrap.min.js')}"/>


    <apex:stylesheet value="{!URLFOR($Resource.inContactResource, '/inContactResource/css/bootstrap.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.inContactResource, '/inContactResource/css/bootstrap-theme.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoUIGanttChart, '/kendo-UI/styles/kendo.common.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoUIGanttChart, '/kendo-UI/styles/kendo.rtl.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoUIGanttChart, '/kendo-UI/styles/kendo.default.min.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.KendoUIGanttChart, '/kendo-UI/styles/kendo.silver.min.css')}"/>



    <apex:form >

        <div id="deviceList"></div>
        <!-- Information Modal -->
        <div class="modal fade" id="info" tabindex="-1" role="dialog" aria-labelledby="info" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content" style="width:1200px;right:50%;">
                    <div class="modal-header">
                        <h5 class="modal-title" id="infolabel">Add timeFrams</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body" style="font-size:14px;" id="infoModal">

                        <div id="timeFramDetails"></div>

                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn button-cancel" data-dismiss="modal" style="color:black !important;">Close</button>
                    </div>
                </div>
            </div>
        </div>

    </apex:form>

    <script>
         $(document).ready(function() {
            setupDeviceList();
         });


       function setupDeviceList(){
               var worklogDataSource =new kendo.data.DataSource({
                    autosync:true,
                    sort:{field: "Project__c", dir:"asc"},
                  transport:{
                      read: function(options){
                               XMNotificationDeviceManageController.GetNotificationDevices(
                                      '{!contactId}',
                                      function(result,event)
                                      {
                                          if (event.status) {
                                              options.success(JSON.parse(result));
                                              console.log('results =>' + JSON.stringify(result));
                                            } else if (event.type === 'exception') {
                                                document.getElementById("java-errors").innerHTML = event.message;
                                                console.log('error =>' + event.message);
                                            } else {
                                                document.getElementById("java-errors").innerHTML = event.message;
                                                console.log('error =>' + event.message);
                                            }
                                      },
                                      {escape: false}
                               );
                            },
                        update: function(options){
                             options.success();
                        },
                        create: function(options){
                            options.success();
                        },
                        destroy: function(options){
                            options.success();
                        }
                      },
                    schema:{
                        model: {
                            id: "Id",
                            fields: {
                                "Id": {from:"DeviceId", type: "string"},
                                "Active": {  type: "boolean"},
                                "DeviceType": { type: "string", },
                                "PriorityThreshold":{type:"string"},
                                "DeviceValue" : {type: "string"},
                                "TimeFrame":{editable: false, nullable: true}

                        }
                    }
                  }
              });

              $("#deviceList").kendoGrid({
                  dataSource: worklogDataSource,
                  editable: "inline",
                  scrollable: true,
                  height: 600,
                  toolbar: ["create"],
                  columns: [{
                                field:"Id",
                                filterable: false,
                                hidden: true
                            },

                            {
                                field: "Active"
                            },
                            {
                                field:"DeviceType",
                                title:"Device Type",
                                editor: DeviceTypePicklistEditor
                            },
                            {
                                field: "PriorityThreshold",
                                title: "Priority Threshold",
                                editor: PriorityThresholdEditor,
                                width:250
                            },
                            {
                                field: "DeviceValue",
                                title: "Value"
                             },
                            {
                                field:"TimeFrame",
                                title:"Time Frames",
                                editable:false,
                                template: '<a href="" onClick="OpenModal(this); return false;" style="text-decoration: underline;">Add TimeFrames</a>'

                            },
                            {command: ["edit","destroy"]}

                  ],
                    dataBound: function () {
                                    if (!this.dataSource.data().length) {
                     this.tbody.append($("<tr class='no-drag' colspan='2'><td/><td/><td>No records to display</td></tr>"));
                   }
                  }
              });
       }

         function DeviceTypePicklistEditor(container, options) {
            $('<input style="width:95%" required  id="DeviceType" name="DeviceType"  data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    autobind: false,
                    dataSource: {
                        data: {!deviceTypes}
                    },
                    value: options.model.DeviceType
                  });
            }


         function PriorityThresholdEditor(container, options) {
            $('<input style="width:95%" required  id="PriorityThreshold" name="PriorityThreshold"  data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoDropDownList({
                    autobind: false,
                    dataSource: {
                        data: {!PriorityThresholds}
                    },
                    value: options.model.PriorityThresholds
                  });
            }


       function OpenModal(sender ){
           var deviceId;
        var grid = $('#deviceList').data('kendoGrid');
        if (grid){
            var data = grid.dataItem($(sender).closest("tr"));
            if (data){
             deviceId = data.Id;
            }
        }

        var timeFramGrid =  $("#timeFramDetails").data('kendoGrid');
		if(timeFramGrid)
         	timeFramGrid.destroy();

        var timeFrameDataSource = new kendo.data.DataSource({
            		autosync:true,
                    transport:{
                      read: function(options){
                          	   XMNotificationDeviceManageController.GetTimeFramesForDevice(
                                      deviceId,
                                      function(result,event)
                                      {
                                          if (event.status) {
                                              records = JSON.parse(result);
                                              console.log('Account records => ' + JSON.stringify(records));
                                              options.success(records);
                                            } else if (event.type === 'exception') {
                                                console.log('exception => ' + event.message);

                                            } else {
                                                 console.log('exception => ' + event.message);
                                              }
                                      },
                                      {escape: false}
                               );
                      }
                   },
                    schema:{
                        model: {
                           id: "Id",
                           fields: {
                                Id : {from: "TimeFrameId", type: "string" },
                                StartTime: {  type: "string" },
                                EndTime: {  type: "string" },
                                Days: { type: "string"}
                           }
                        }
                    }
        });
        $("#timeFramDetails").kendoGrid({
                dataSource: timeFrameDataSource,
                sortable: true,
                editable: "inline",
                scrollable: true,
                height:300,
                 toolbar: ["create"],
                columns: [{
                    field: "StartTime",
                    title: "Start Time",
                    editor:TimePickerStartTime
                }, {
                    field: "EndTime",
                    title: "End Time",
                    editor: TimePickerEndTime
                }, {
                    field: "Days",
                    title: "Days",
                    editor: DayEditor
                },
                {command: ["edit","destroy"]}
                ]
        });

        $('#info').modal('show');
     }

      var end, start;
      function DayEditor(container, options) {
            $('<input style="width:100%" id="Days" name="Days"  data-bind="value:' + options.field + '"/>')
                .appendTo(container)
                .kendoMultiSelect({
                    autobind: false,
                    dataSource: {
                        data: {!days}
                    },
                    value: options.model.PriorityThresholds
                  });
            }

        function TimePickerStartTime(container, options) {
            $('<input style="width:100%" required  id="StartTime" name="StartTime"  data-bind="value:' + options.field + '"/>')
              .appendTo(container)
              .kendoTimePicker({
                            change: startChange
                        });

              start = $("#StartTime").data("kendoTimePicker");
            }
            function TimePickerEndTime(container, options) {
             $('<input style="width:100%" required  id="EndTime" name="EndTime"  data-bind="value:' + options.field + '"/>')
              .appendTo(container)
              .kendoTimePicker();
               end = $("#EndTime").data("kendoTimePicker");

            }

            function startChange() {
                        var startTime = start.value();

                        if (startTime) {
                            startTime = new Date(startTime);

                            end.max(startTime);

                            startTime.setMinutes(startTime.getMinutes() + this.options.interval);

                            end.min(startTime);
                            end.value(startTime);
                        }
             }


    </script>

</apex:page>